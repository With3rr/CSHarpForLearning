using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp4
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Ile elementów talbicy:");
            int n = Convert.ToInt32(Console.ReadLine());
            int[] tab = Losowe(n);

            Console.WriteLine("Nieposortowane");
            for (int i = 0; i < n; i++)
            {
                Console.Write(" " + tab[i]);
            }
            tab = BubbleSort(tab);
            Console.WriteLine();

            Console.WriteLine("Posortowane");

            for (int i = 0; i < n; i++)
            {
                Console.Write(" " + tab[i]);

            }

            Console.ReadLine();

        }
        static int[] Losowe(int a)
        {
            Random b = new Random();
            int[] tablica = new int[a];
            for (int i = 0; i < a; i++)
            {
                tablica[i] = b.Next(1, 15);
            }
            return tablica;



        }
        static int[] BubbleSort(int[] tablicado)
        {
            //alorytm ten nie sprawdza czy ma jakies elementy do posortowanie wiec liczba razy które sie wykona to n*(n-1)
            //int x;
            //for (int i = 0; i < tablicado.Length - 1; i++)
            //{
            //    for (int j = 1; j < tablicado.Length; j++)
            //    {
            //        if (tablicado[j - 1] > tablicado[j])
            //        {
            //            x = tablicado[j - 1];
            //            tablicado[j - 1] = tablicado[j];
            //            tablicado[j] = x;
            //        }
            //    }

            //}
            //Sortowanie z ulepszeniem które sprawdza czy dalej ma jakieś elementy do posortowania   (n-1)*n-pppoprawka
            int p;
            int licznik = 0;
            bool czy = true;
            while(licznik<tablicado.Length-1&&czy)
            {
                czy = false;
                for (int j = 1; j < tablicado.Length; j++)
                {
                    if (tablicado[j - 1] > tablicado[j])
                    {
                        p = tablicado[j - 1];
                        tablicado[j - 1] = tablicado[j];
                        tablicado[j] = p;
                        czy = true;
                    }
                }
                p++;

            }
            return tablicado;


        }

    }
}
